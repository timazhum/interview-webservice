apiVersion: apps/v1
kind: Deployment
metadata:
  name: interview
  labels:
    app: webservice
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webservice
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: webservice
    spec:
      containers:
        - name: interview
          image: <IMAGE> # the value will be replaced in Github Actions
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                  name: interview-configmap
                  key: spring_profiles_active
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: interview-secret
                  key: database_url
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: interview-secret
                  key: database_user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: interview-secret
                  key: database_password
          resources:
            requests:
              cpu: 100m
            limits:
              cpu: 100m
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 200
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 10
      imagePullSecrets:
        - name: interview
---
apiVersion: v1
kind: Service
metadata:
  name: interview-service
spec:
  type: LoadBalancer
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: webservice